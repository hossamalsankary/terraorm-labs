# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Ignore Mac system files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Ignore Windows system files
*.tmp
*.temp
*.log

# Ignore IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# Ignore environment files
.env
.env.local
.env.*.local

# Ignore backup files
*.backup
*.bak
*.orig

# Ignore temporary files
*.tmp
temp/
tmp/

# Ignore lock files (uncomment if you want to ignore them)
# .terraform.lock.hcl

# Ignore plan files
*.tfplan
*.tfplan.*

# Ignore generated documentation
docs/generated/

# Ignore test results
test-results/
test-output/

# Ignore AWS credentials (just in case)
.aws/
aws-credentials.json

# Ignore SSH keys
*.pem
*.key
id_rsa*
id_ecdsa*
id_ed25519*

# Ignore Terraform modules (if downloaded locally)
modules/.terraform/

# Ignore any local configuration files
local.tf
local.tfvars

# Ignore any scripts with sensitive data
*-secrets.sh
*-credentials.sh